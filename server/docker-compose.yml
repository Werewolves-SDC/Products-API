version: "3.8"
services:
  #node server configs
  server:
    build: .
    depends_on:
    # load database first
#      - postgres
    ports:
      - ${SERVER_PORT}:${DOCKER_SERVER_PORT}
    volumes:
      # map the current proj dir @ '.' to
      # the working dir in the continer
      - ./:/server

      # POSTGRES CONFIG
      # remove if deploying to separate cloud instances
      # if deploying to the same ec2 instance, use as is
  # postgres:
  #   image: postgres:15-alpine
  #   restart: always
  #   environment:
  #     # postgres env vars
  #     - POSTGRES_USER=${PG_USER}
  #     - POSTGRES_PASSWORD=${PG_PASS}
  #     - POSTGRES_DB=${PG_DATABASE}
  #   ports:
  #     # 5432 standard for pg dbs
  #     - ${PG_PORT}:${PG_CONTAINER_PORT}
  #   volumes:
  #     # not seeding data, only applying schema
  #     # and mapping a dir where we can add
  #     # the .csv files we'll use to populate the db
  #     - ./data:/var/lib/postgresql/data
  #     - ./products.sql:/docker-entrypoint-initdb.d/products.sql





# docker volumes ${PWD}:usr/src/app
# will map the current working dir to the container
# and allow for real-time editing that will be reflected in the container
